package test

import (
	"strings"

	"github.com/johnhany97/grader/processors"
)

// JavaStyleTestHandler is a struct containing all the properties
// needed to be able to execute a test task that does java style checking
type JavaStyleTestHandler struct {
	Test   Test
	File   string
	Folder string
}

func (jst JavaStyleTestHandler) RunTest() (TestResult, error) {
	processor := processors.SubmissionsProcessor{}
	stdout, stderr, err := processor.ExecuteJavaStyle(jst.File, jst.Folder)
	if err != nil {
		return jst.handleErr(err)
	}
	return jst.NewResult(stdout, stderr), nil
}

func (jst JavaStyleTestHandler) NewResult(stdout string, stderr string) TestResult {
	tr := TestResult{
		Test: jst.Test,
	}

	// Add Trimmed outputs
	tr.StdOut = strings.TrimSpace(stdout)
	tr.StdErr = strings.TrimSpace(stderr)
	tr.Description = "Results generated by Checkstyle. A static analyzer built for analyzing Java Programs."

	return tr
}

func (jst JavaStyleTestHandler) handleErr(e error) (TestResult, error) {
	if strings.Compare(e.Error(), "timeout") == 0 {
		return TestResult{
			Test:     jst.Test,
			TimedOut: true,
		}, nil
	}
	return TestResult{
		Test: jst.Test,
	}, e
}
